{"version":3,"sources":["components/App.js","index.js"],"names":["require","config","App","useState","initWeb3","a","window","ethereum","web3","Web3","enable","currentProvider","alert","initBlockchainData","eth","getAccounts","accounts","console","log","getBalance","uniswapFactoryContract","Contract","uniswapFactory","process","kyberRateContract","kyberRate","outputTokenAddress","inputTokenAddress","methods","getExchange","call","exchangeAddress","uniswapExchangeContract","uniswap","inputAmount","utils","toWei","getEthToTokenInputPrice","uniswapResult","getExpectedRate","expectedRate","slippageRate","fromWei","useEffect","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"48hBAOAA,EAAQ,KAAUC,SAgDHC,MA/Cb,WACA,MAA+BC,mBAAS,MAAxC,mBACA,GADA,UAC+BA,mBAAS,OAAxC,mBAEMC,GAFN,UAEc,uCAAG,sBAAAC,EAAA,0DACXC,OAAOC,SADI,uBAEbD,OAAOE,KAAO,IAAIC,IAAKH,OAAOC,UAFjB,SAGPD,OAAOC,SAASG,SAHT,6BAKNJ,OAAOE,KACdF,OAAOE,KAAO,IAAIC,IAAKH,OAAOE,KAAKG,iBAEnCL,OAAOM,MAAM,uEARA,2CAAH,sDAWRC,EAAkB,uCAAG,kDAAAR,EAAA,6DACnBG,EAAOF,OAAOE,KADK,SAEFA,EAAKM,IAAIC,cAFP,cAEnBC,EAFmB,OAGzBC,QAAQC,IAAIF,GAHa,SAIHR,EAAKM,IAAIK,WAAWH,EAAS,IAJ1B,qBAOnBI,EAAyB,IAAIZ,EAAKM,IAAIO,SAASC,EAAgBC,8CAC/DC,EAAoB,IAAIhB,EAAKM,IAAIO,SAASI,EAAWF,8CACrDG,EAAqB,6CACrBC,EAAoB,6CAVD,UAWKP,EAAuBQ,QAAQC,YAAYH,GAAoBI,OAXpE,eAWnBC,EAXmB,OAYnBC,EAA0B,IAAIxB,EAAKM,IAAIO,SAASY,EAASF,GACzDG,EAAc1B,EAAK2B,MAAMC,MAAM,IAAK,SAbjB,UAeGJ,EAAwBJ,QAAQS,wBAAwBH,GAAaJ,OAfxE,eAenBQ,EAfmB,iBAgBmBd,EAAkBI,QAAQW,gBAAgBZ,EAAmBD,EAAoBQ,GAAa,GAAMJ,OAhBvH,iBAgBjBU,EAhBiB,EAgBjBA,aAhBiB,EAgBHC,aACtBxB,QAAQC,IAAK,gBAAgBV,EAAK2B,MAAMO,QAAQJ,EAAe,UAC/DrB,QAAQC,IAAI,kBAAmBV,EAAK2B,MAAMO,QAAQF,EAAc,UAlBvC,4CAAH,qDAyBxB,OALAG,oBAAS,sBAAC,sBAAAtC,EAAA,sEACFD,IADE,uBAEFS,IAFE,OAGRI,QAAQC,IAAI,KAHJ,2CAIP,IAED,qBAAK0B,UAAU,MAAf,2BC5CJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.022af072.chunk.js","sourcesContent":["import './App.css';\nimport uniswapFactory from '../abis/UniswapFactory.json';\nimport uniswap from '../abis/Uniswap.json';\nimport kyberRate from '../abis/KyberRate.json'\nimport Web3 from 'web3';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nrequire('dotenv').config()\n  function App() {\n  const [account, setAccount]  = useState(null);\n  const [balance, setBalance]  = useState(null);\n\n  const initWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n  const initBlockchainData = async () => {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    const balance = await web3.eth.getBalance(accounts[0]);\n    // this.setState({ account: accounts[0], balance: balance });\n    //uniswap factory\n    const uniswapFactoryContract = new web3.eth.Contract(uniswapFactory, process.env.REACT_APP_UNISWAP_FACTORY);\n    const kyberRateContract = new web3.eth.Contract(kyberRate, process.env.REACT_APP_KYBER_RATE_ADDRESS)\n    const outputTokenAddress = \"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2\"\n    const inputTokenAddress = \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\"\n    const exchangeAddress = await uniswapFactoryContract.methods.getExchange(outputTokenAddress).call()\n    const uniswapExchangeContract = new web3.eth.Contract(uniswap, exchangeAddress);\n    const inputAmount = web3.utils.toWei('1', 'ETHER')\n\n    const uniswapResult = await uniswapExchangeContract.methods.getEthToTokenInputPrice(inputAmount).call()\n    const { expectedRate, slippageRate} = await kyberRateContract.methods.getExpectedRate(inputTokenAddress, outputTokenAddress, inputAmount, true).call()\n    console.log( \"uniswapResult\",web3.utils.fromWei(uniswapResult, 'ETHER'));\n    console.log(\"kyberRateResult\", web3.utils.fromWei(expectedRate, 'ETHER'))\n  }\n  useEffect(async () => {\n    await initWeb3();\n    await initBlockchainData();\n    console.log(\"1\");\n  }, [])\n  return (\n    <div className=\"App\">\n      what is this\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}